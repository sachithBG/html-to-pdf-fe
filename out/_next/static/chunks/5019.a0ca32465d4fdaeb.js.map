{"version":3,"file":"static/chunks/5019.a0ca32465d4fdaeb.js","mappings":"AA6CA","sources":["webpack://_N_E/./src/app/components/DownloadButton.tsx"],"sourcesContent":["\"use client\";\r\nimport { Button } from '@mui/material';\r\nimport React from 'react';\r\n\r\ninterface DownloadButtonProps {\r\n    pdfData: string | null; // Base64 string of the PDF data\r\n}\r\n\r\nconst DownloadButton: React.FC<DownloadButtonProps> = ({ pdfData }) => {\r\n    const handleDownload = () => {\r\n        try {\r\n\r\n            if (!pdfData) {\r\n                alert('No PDF data available to download.');\r\n                return;\r\n            }\r\n\r\n            // Convert Base64 to a Blob\r\n            const byteCharacters = atob(pdfData);\r\n            const byteNumbers = Array.from(byteCharacters, (char) => char.charCodeAt(0));\r\n            const byteArray = new Uint8Array(byteNumbers);\r\n            const blob = new Blob([byteArray], { type: 'application/pdf' });\r\n\r\n            // Create a link element for downloading\r\n            const link = document.createElement('a');\r\n            link.href = URL.createObjectURL(blob);\r\n            link.download = 'downloaded-file.pdf';\r\n            document.body.appendChild(link);\r\n            link.click();\r\n\r\n            // Clean up\r\n            document.body.removeChild(link);\r\n            URL.revokeObjectURL(link.href);\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Button type='button' size='small' variant=\"outlined\" onClick={handleDownload} disabled={!pdfData}>\r\n            Download PDF\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default DownloadButton;\r\n"],"names":[],"sourceRoot":""}