{"version":3,"file":"static/chunks/4305.8873014791592a2a.js","mappings":"AAcA","sources":["webpack://_N_E/./src/app/(pages)/setup/components/SectionEditor.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Box,\r\n    TextField,\r\n    MenuItem,\r\n    Select,\r\n    Typography,\r\n    Divider,\r\n    FormControl,\r\n    InputLabel,\r\n    Grid2,\r\n    ListItemText,\r\n} from \"@mui/material\";\r\nimport dynamic from \"next/dynamic\";\r\nconst CKTextField = dynamic(() => import('@/app/(pages)/setup/components/CKTextField'), { ssr: false });\r\n\r\nconst SectionEditor = ({ section, onChange, subcategories, token, orgId }: any) => {\r\n\r\n    const [isEditorLoading, setIsEditorLoading] = useState<boolean>(true);\r\n    const handleNameChange = (event: any) => {\r\n        onChange({ name: event.target.value });\r\n    };\r\n\r\n    const handleSubCategoriesChange = (event: any) => {\r\n        const { value } = event.target;\r\n        onChange({ subcategories: typeof value === \"string\" ? value.split(\",\") : value });\r\n    };\r\n\r\n\r\n    // const handleHtmlContentChangeOld = (event: any) => {\r\n    //     onChange({ htmlContent: event.target.value });\r\n    // };\r\n\r\n    const handleHtmlContentChange = (data: any) => {\r\n        onChange({ htmlContent: data });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => setIsEditorLoading(false), 2000); // Simulate loading\r\n        return () => clearTimeout(timeout);\r\n    }, []);\r\n\r\n    return (\r\n        <Box sx={{ mb: 2 }}>\r\n            <Typography variant=\"h6\">Section - {section.name}</Typography>\r\n            <Divider sx={{ my: 2 }} />\r\n            <Box sx={{ display: \"flex\", gap: 2, mb: 2 }}>\r\n                <TextField\r\n                    label=\"Section Name\"\r\n                    value={section.name}\r\n                    onChange={handleNameChange}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                />\r\n                <Grid2 sx={{ width: '100%' }}>\r\n                    <FormControl fullWidth size=\"small\">\r\n                        <InputLabel>Subcategories</InputLabel>\r\n                        <Select\r\n                            multiple\r\n                            value={section.subcategories || []}\r\n                            onChange={handleSubCategoriesChange}\r\n                            label='Subcategories'\r\n                            renderValue={(selected) => {\r\n                                return selected.join(', ');\r\n                            }}\r\n                            // input={<OutlinedInput label=\"Subcategories\" />}\r\n                            // renderValue={(selected) => (\r\n                            //     <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\r\n                            //         {selected.map((value: any) => (\r\n                            //             <Chip key={value} label={value} />\r\n                            //         ))}\r\n                            //     </Box>\r\n                            // )}\r\n                            fullWidth\r\n                        // size=\"small\"\r\n\r\n                        >\r\n                            {subcategories?.map((category: string) => (\r\n                                <MenuItem key={category} value={category}>\r\n                                    <ListItemText primary={category} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid2>\r\n            </Box>\r\n            <Box display=\"flex\" gap={4}>\r\n                <Box flex={1}>\r\n                    <CKTextField\r\n                        value={section.htmlContent}\r\n                        onChange={handleHtmlContentChange}\r\n                        isLoading={isEditorLoading}\r\n                        placeholder=\"Start typing your content...\"\r\n                        config={{}}\r\n                        token={token} orgId={orgId}\r\n                    />\r\n                    {/* <TextField\r\n                        label=\"HTML Content\"\r\n                        value={section.htmlContent}\r\n                        onChange={handleHtmlContentChange}\r\n                        multiline\r\n                        rows={6}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                    /> */}\r\n                </Box>\r\n                {/* Preview Section */}\r\n                {/* <Box flex={1} p={2} border=\"1px solid var(--foreground)\">\r\n                    <Typography variant=\"h6\">Preview</Typography>\r\n                    <Box\r\n                        dangerouslySetInnerHTML={{\r\n                            __html: section.htmlContent\r\n                        }}\r\n                    />\r\n                </Box> */}\r\n            </Box>\r\n\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default SectionEditor;\r\n"],"names":[],"sourceRoot":""}