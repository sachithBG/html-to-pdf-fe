{"version":3,"file":"static/chunks/3452.44e1fe72f7a4a367.js","mappings":"AAIA","sources":["webpack://_N_E/./node_modules/@mui/icons-material/esm/Delete.js","webpack://_N_E/./node_modules/@mui/icons-material/esm/IndeterminateCheckBox.js","webpack://_N_E/./node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","webpack://_N_E/./node_modules/@mui/material/DialogContentText/DialogContentText.js","webpack://_N_E/./src/app/(pages)/setup/components/DeleteConfirmDialog.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m-2 10H7v-2h10z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport { getDialogContentTextUtilityClass } from \"./dialogContentTextClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return {\n    ...classes,\n    // forward classes to the Typography\n    ...composedClasses\n  };\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n    children,\n    className,\n    ...ownerState\n  } = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, {\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ...props,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","import React, { FC, useState } from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    IconButton,\r\n    ButtonProps,\r\n    IconButtonProps,\r\n} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport IndeterminateCheckBoxIcon from '@mui/icons-material/IndeterminateCheckBox';\r\n\r\ninterface DeleteConfirmDialogProps {\r\n    id: string | number; // The ID of the item to delete\r\n    onDelete: (id: string | number) => void; // Callback with the ID of the item\r\n    title?: string; // Optional title for the dialog\r\n    description?: string; // Optional description for the dialog\r\n    variant?: \"icon\" | \"normal\"; // Button type: icon or normal\r\n    buttonProps?: ButtonProps | IconButtonProps; // Props for the button\r\n    iconType?: 'delete' | 'remove' \r\n}\r\n\r\n/* usege --------------------------------------------\r\n<DeleteConfirmDialog\r\n    id={template.id}\r\n    onDelete={(id:any) => handleDelete(id)}\r\n    variant=\"icon\"\r\n    buttonProps={{ size: \"small\", color: \"error\" }} // IconButton props\r\n/>\r\n<DeleteConfirmDialog\r\n  id={102}\r\n  onDelete={(id) => console.log(\"Deleted:\", id)}\r\n  variant=\"normal\"\r\n  buttonProps={{ size: \"medium\", variant: \"outlined\", color: \"primary\" }} // Button props\r\n/>\r\n\r\n*/\r\n\r\nconst DeleteConfirmDialog: FC<DeleteConfirmDialogProps> = ({\r\n    id,\r\n    onDelete,\r\n    title = \"Confirm Deletion\",\r\n    description = \"Are you sure you want to delete this item? This action cannot be undone.\",\r\n    variant = \"normal\",\r\n    buttonProps,\r\n    iconType = 'delete'\r\n}) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const handleConfirmDelete = () => {\r\n        onDelete(id); // Pass the ID to the delete action\r\n        handleClose(); // Close the dialog\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* Trigger Button */}\r\n            {variant === \"icon\" ? (\r\n                <IconButton onClick={handleOpen} {...(buttonProps as IconButtonProps)}>\r\n                    {iconType == 'delete' ? <DeleteIcon /> : <IndeterminateCheckBoxIcon />}\r\n                </IconButton>\r\n            ) : (\r\n                <Button onClick={handleOpen} {...(buttonProps as ButtonProps)}>\r\n                    Delete\r\n                </Button>\r\n            )}\r\n\r\n            {/* Confirmation Dialog */}\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"delete-dialog-title\"\r\n                aria-describedby=\"delete-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"delete-dialog-title\">{title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"delete-dialog-description\">\r\n                        {description}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleConfirmDelete} color=\"error\" autoFocus>\r\n                        Confirm\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DeleteConfirmDialog;\r\n"],"names":[],"sourceRoot":""}